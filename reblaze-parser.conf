input {
  tcp {
    host => "0.0.0.0"
    port => 514
#    port => 6514
#    ssl_cert => "/etc/logstash/conf.d/reblaze/private/public.crt"
#    ssl_key => "/etc/logstash/conf.d/reblaze/private/private.key"
#    ssl_verify => false
#    codec => "json"
  }
}


filter {
  grok {
    match => {
      "message" =>  %{NOTSPACE:application} <%{NUMBER:severity}>%{NOTSPACE:application} %{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:application} %{NOTSPACE:application} %{NOTSPACE:process} %{NOTSPACE:pid} %{NOTSPACE:message} %{QUOTEDSTRING:client_ip} %{NOTSPACE:application} %{NUMBER:http_status_code} %{NOTSPACE:application} %{QUOTEDSTRING:http_request} %{NUMBER:http_version} %{NUMBER:protocol_version} %{QUOTEDSTRING:error_message} %{QUOTEDSTRING:country} %{QUOTEDSTRING:country_code} %{QUOTEDSTRING:request_id} %{QUOTEDSTRING:user_agent} %{NOTSPACE:application} %{NOTSPACE:application} %{NOTSPACE:application} %{NOTSPACE:application} %{QUOTEDSTRING:referrer_domain} %{QUOTEDSTRING:referrer_path} %{QUOTEDSTRING:client_ip_list} %{NOTSPACE:application} %{NOTSPACE:application} %{NOTSPACE:application} %{NOTSPACE:application} %{NOTSPACE:application} %{NOTSPACE:application} %{NOTSPACE:application} %{NOTSPACE:application} %{NOTSPACE:application}
    }
  }
  mutate {
    gsub => ["client_ip_list", "\"", "",     "referrer_domain", "\"", "",     "user_agent", "\"", "",    "error_message", "\"", "",     "http_request", "\"", "",     "referrer_path", "\"", "",    "client_ip", "\"", "",      "country", "\"", "",      "country_code", "\"", "",      "message", "\"", ""    ]
  }
  grok {
    match => {
      "http_request" => "%{WORD:http_method} %{URIPATH:http_path} HTTP/%{NUMBER:http_protocol}"
    }
  }
  mutate {
    id => "Field addition"
    add_field => {
      "Full URL" => "https://%{referrer_domain}%{http_path}"
    }
  }  
  mutate {
    remove_field => [ "event.original", "message" ]
  }  
  geoip {
    source => "client_ip"
    target => "geoip"
    database => "/GeoLite2-City.mmdb"
    add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
    add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
  }
  mutate {
    convert => [ "[geoip][coordinates]", "float"]
  }
}

output {
  elasticsearch {
    id => "Send to Elasticsearch"
    hosts => "https://ip:9200"
    ssl => true
    ssl_certificate_verification => false
    index => "reblaze-%{+YYYY.MM.dd}"
    user => "user"
    password => "password"
  }
}
